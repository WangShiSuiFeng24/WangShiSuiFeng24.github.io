{"meta":{"title":"往事丶随风的博客","subtitle":"我是子标题","description":"华中师范大学 计算机应用技术专业","author":"AndongMing","url":"http://example.com","root":"/"},"pages":[{"title":"分类","date":"2023-08-27T01:12:22.000Z","updated":"2023-08-27T01:13:15.183Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2023-08-27T01:15:40.000Z","updated":"2023-08-27T01:16:18.054Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-08-27T01:09:37.000Z","updated":"2023-08-27T01:11:01.492Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"生疏单词收集","slug":"生疏单词收集","date":"2023-08-29T01:48:19.000Z","updated":"2023-09-01T11:24:26.986Z","comments":true,"path":"2023/08/29/生疏单词收集/","link":"","permalink":"http://example.com/2023/08/29/%E7%94%9F%E7%96%8F%E5%8D%95%E8%AF%8D%E6%94%B6%E9%9B%86/","excerpt":"","text":"英语单词收集 otherwise 否则 tutorial 教程 installation wizard 安装向导 ecosystem 生态系统 duplicate 重复的，复制的 efforts 努力 take on new responsibilities 承担新的责任 presence 存在，出现 constitute 组成，构成 endorsement (公开的)赞同，认可，支持，背书 entirely 完全地，全部地 even then 即使那样，即使这样 figure out 弄清楚 step through 单步执行 overview 概述 approximation 近似，近似值 peek definition 查看定义 potential 潜在的 scenarios 场景 semicolon 分号 preprocessor 预处理器 directive 指令 terminator 终止符 argument list 形参列表 parameter list 参数列表 original style 原创风格 very explicit style 非常明确的风格 manipulator 控制符 invalid 无效的，(法律上或官方)不承认的 carriage return 回车，换行 omitted 删除的，省略的 extensible 可扩展的 function prototype 函数原型 function 函数 procedure 过程 subroutine 子程序 toes 脚趾 absent from 缺席 stone 英石 (1 stone = 14 pounds) pound 磅 repositioning 重新定位 Celsius 摄氏的，摄氏 Fahrenheit 华氏的 astronomical 天文的 astronomical unit 天文单位 reserved 保留的 underscore 下划线(_) digit 数字 even more distinct 甚至更加明显 hyphen 连字符(-) yield 产生","categories":[],"tags":[]},{"title":"官网技术文档收集","slug":"官网技术文档收集","date":"2023-08-28T02:15:28.000Z","updated":"2023-08-30T08:48:30.462Z","comments":true,"path":"2023/08/28/官网技术文档收集/","link":"","permalink":"http://example.com/2023/08/28/%E5%AE%98%E7%BD%91%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/","excerpt":"","text":"官方网站+技术文档LATEX LATEX 官网 LATEX 官方文档(英文) LATEX 官方文档(中文翻译) HEXO HEXO 官网 HEXO 官方文档 Visual Studio Code VS code 官网 VS code 官方文档 Git Git 官网 Git 官方文档 CommonMarkdown CommonMark 官网 CommonMark 基本操作 VS code Markdown Markdown and Visual Studio Code hexo-theme-butterfly hexo-theme-butterfly Github hexo-theme-butterfly 官方文档 GitHub Flavored Markdown 的正式规范 GitHub Flavored Markdown 的正式规范 GitHub 风格的 Markdown 规范 待续","categories":[],"tags":[]},{"title":"Markdown常用语法","slug":"Markdown常用语法","date":"2023-08-06T12:58:46.000Z","updated":"2023-08-28T06:30:39.308Z","comments":true,"path":"2023/08/06/Markdown常用语法/","link":"","permalink":"http://example.com/2023/08/06/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/","excerpt":"","text":"一、Markdown简介Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。 Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。 Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。 Markdown 编写的文档后缀为 .md, .markdown。 Markdown 能被使用来撰写电子书，如：Gitbook。 当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。 Markdown编写Hello World!语法： 1# Hello World! 二、Markdown标题使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。 使用#号标记标题语法格式： 1234567891011# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 显示效果： 一级标题二级标题三级标题四级标题五级标题六级标题三、Markdown段落Markdown 的段落没有特殊的格式，直接编写文字就好，段落的换行号是使用两个以上的空格加回车。 3.1 字体 Markdown 可以使用以下几种字体： 用1个星号*或底线_表示斜体 用2个星号*或底线_表示粗体 用3个星号*或底线_表示粗斜体 语法格式： 1234567891011*斜体文字*_斜体文字_**粗体文字**__粗体文字__***粗斜体文字***___粗斜体文字___ 显示效果 斜体文字 斜体文字 粗体文字 粗体文字 粗斜体文字 粗斜体文字 3.2 分割线 可以在一行中用三个以上的星号*、减号-、底线_来建立一个分割线，行内不能有其他东西，你也可以在星号或减号蹭插入空格。下面这种写法都可以建立分隔线： 12345**** * *******- - ------- 显示效果： 3.3 删除线 如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线~~即可。 123baidu.comsina.com~~tencent.com~~ 显示效果如下： baidu.com sina.com tencent.com 3.4 下划线 下划线可以通过HTML的标签来实现 1&lt;u&gt;带下划线文本&lt;/u&gt; 显示效果如下： 带下划线文本 3.5 脚注 脚注是对文本的补充说明。 1[^要注明的文本]： 显示效果： 要注明的文本:input description here 四、Markdown 列表4.1 有序列表和无序列表 Markdown支持有序列表和无序列表，无序列表使用星号(*)、加号(+)或者减号(-)作为标记： 1234567891011* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项 显示效果： 第一项 第二项 第三项 第一项 第二项 第三项 第一项 第二项 第三项 有序列表直接在文字有加上1. 2. 3. 来表示，符号和文字之间加上一个空格字符，如： 1231. 第一项2. 第二项3. 第三项 第一项 第二项 第三项 4.2 列表嵌套 列表嵌套只需在子列表的选项前添加四个空格即可： 1234561. 第一项： - 第一项嵌套的第一个元素 - 第一项嵌套的第二个元素2. 第二项： - 第二项嵌套的第一个元素 - 第二项嵌套的第二个元素 显示效果： 第一项 第一项嵌套的第一个元素 第一项嵌套的第二个元素 第二项 第二项嵌套的第一个元素 第二项嵌套的第二个元素 五、Markdown区块Markdown区块引用是在段落开头使用&gt;符号，然后后面紧跟一个空格符号。 123&gt; 区块引用&gt; Markdown教程&gt; 学的不仅是技术更是梦想 显示效果如下： 区块引用 Markdown教程 学的不仅是技术更是梦想 另外区块是可以嵌套的，一个&gt;符号是最外层，两个符号是第一层嵌套，以此类推： 123&gt; 最外层&gt;&gt; 第一层嵌套&gt;&gt;&gt; 第二层嵌套 显示效果如下： 最外层 第一层嵌套 第二层嵌套 5.1 区块中使用列表 区块中使用列表实例如下： 123456&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项 显示效果： 区块中使用列表 1. 第一项 2. 第二项 + 第一项 + 第二项 + 第三项 5.2 列表中使用区块 如果要在列表项目内放进区块，那么就需要在&gt;前添加四个空格和缩进。 1234* 第一项 &gt; Markdown教程 &gt; 学的不仅是技术更是梦想* 第二项 显示效果如下： 第一项 &gt; Markdown教程 &gt; 学的不仅是技术更是梦想 第二项 六、Markdown代码框如果是段落上的一个函数或片段的代码可以用两个`把它包起来。 1`print()`函数 print()函数 6.1 代码区块 代码区块使用4个空格或者一个制表符（Tab键）。 1234&lt;?Python print(&#x27;Markdown&#x27;) def test(): print(&#x27;Markdown test!&#x27;) 也可以用’’’包裹一段代码，并指定一种语言（也可以不指定）： 12345&#x27;&#x27;&#x27;javascript$(document).read(function()&#123; alert(&#x27;Markdown&#x27;);&#125;);&#x27;&#x27;&#x27; 显示效果： 12345&#x27;&#x27;&#x27;javascript$(document).read(function)&#123; alert(&#x27;Markdown&#x27;);&#125;);&#x27;&#x27;&#x27; 七、Markdown链接链接方法使用如下 123[链接名称](链接地址)或者&lt;链接地址&gt; 例如： 12这是一个链接 [新浪新闻](https://news.sina.com.cn/)&lt;https://news.sina.com.cn/&gt; 显示效果如下： 这是一个链接 新浪新闻 https://news.sina.com.cn/ 7.1 高级链接 1234链接也可以用变量来代替，文档末尾附带变量地址：这个链接用1作为网址变量[baidu][1]这个链接用markdown作为网址变量[Markdown][markdown]然后文档的结尾为变量赋值(网址) 12[1]: http://www.baidu.com[markdown]: http://www.markdown.com 显示效果如下： 链接也可以用变量来代替，文档末尾附带变量地址：这个链接用1作为网址变量baidu这个链接用markdown作为网址变量Markdown然后文档的结尾为变量赋值(网址) 八、Markdown图片Markdown图片语法格式为： 12![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;) 开头一个感叹号！ 接着一个方括号，里面放上图片的代替文字 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的‘title’属性文字。 示例如下： 1234![有问题上知乎 图标](https://cdn.staticaly.com/gh/WangShiSuiFeng24/picx-images-hosting@master/20230807/image.1oqer6reup34.webp）--- 显示效果如下： 也可以像网址那样对图片使用变量： 123这个图片链接用1作为网址变量[zhihu][1]然后在文档的结尾为变量赋值(网址)[1]:(https://cdn.staticaly.com/gh/WangShiSuiFeng24/picx-images-hosting@master/20230807/image.1oqer6reup34.webp) 显示效果如下： 这个图片用1作为网址变量zhihu 然后在文档的结尾为变量赋值(网址) Markdown 没有办法指定图片的高度与宽度，如果需要的话，可以使用普通的标签。 1&lt;img src=&quot;https://cdn.staticaly.com/gh/WangShiSuiFeng24/picx-images-hosting@master/20230807/image.1oqer6reup34.webp&quot; width=10%&gt; 显示效果： 九、Markdown表格Markdown制作表格使用|来分隔不同的单元格，使用-来分隔表头和其他行。 语法格式： 1234|表头1|表头2||----|----||单元格11|单元格12||单元格21|单元格22| 表头1 表头2 单元格11 单元格12 单元格21 单元格22 9.1 对齐方式 可以设置表头的对齐方式： -: 设置内容或标题栏右对齐 :- 设置内容或标题栏左对齐 :-: 设置内容或标题栏居中对齐 语法格式： 1234|左对齐|居中对齐|右对齐||:----|:----:|----:||单元格11|单元格12|单元格13||单元格21|单元格22|单元格23| 左对齐 居中对齐 右对齐 单元格11 单元格12 单元格13 单元格21 单元格22 单元格23 十、Markdown高级技巧支持的HTML元素 不在Markdown涵盖范围之类的标签，都可以直接在文档里面用HTML撰写。 如： 1使用&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt;重启电脑 显示效果如下： 使用Ctrl+Alt+Del重启电脑 10.1 转义 Markdown使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown使用反斜杠转义特殊字符： 12**文本加粗**\\*\\*正常显示星号\\*\\* 显示效果： 文本加粗 **正常显示星号** Markdown支持一下这些符号前面加上反斜杠来帮助插入普通符号： 1234567891011\\ 反斜线` 反引号* 星号_ 下划线&#123;&#125; 花括号[] 方括号() 小括号+ 加号- 减号. 英文句点! 感叹号 10.2 数学公式 当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。 示例如下： 123$$\\int_0^1 &#123;x^2&#125; \\,&#123;\\rm d&#125;x$$ 显示效果： \\int_0^1 {x^2} \\,{\\rm d}x参考链接 CommonMark VS code Markdown","categories":[],"tags":[]},{"title":"待买书籍","slug":"待买书籍","date":"2023-08-04T14:25:50.000Z","updated":"2023-08-04T14:55:39.489Z","comments":true,"path":"2023/08/04/待买书籍/","link":"","permalink":"http://example.com/2023/08/04/%E5%BE%85%E4%B9%B0%E4%B9%A6%E7%B1%8D/","excerpt":"","text":"Python:​ Python从入门到实践 ​ Python核心编程 Java核心技术(两卷,这个简单一点) 算法:​ 算法 计算机网络:​ TCP/IP协议栈 Linux:​ Unix环境高级编程(企业级别C) JavaEE框架:​ Spring 实战 ​ SpringBoot实战 ​ Spring技术内幕 数据库:​ MySQL必知必会 ​ 提升:​ 高性能MySQL 代码质量:​ 重构改善既有代码的设计","categories":[],"tags":[]},{"title":"centos7 使用hexo框架搭建博客成功","slug":"centos7-使用hexo框架搭建博客成功","date":"2023-08-04T12:44:11.741Z","updated":"2023-08-26T06:44:38.528Z","comments":true,"path":"2023/08/04/centos7-使用hexo框架搭建博客成功/","link":"","permalink":"http://example.com/2023/08/04/centos7-%E4%BD%BF%E7%94%A8hexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%88%90%E5%8A%9F/","excerpt":"","text":"1、安装gityum install git -y 2、使用wget下载nodejs 16.15.0版本的压缩包wget https://nodejs.org/dist/v16.15.0/node-v16.15.0-linux-x64.tar.gz 3、解压缩node-v16.15.0到当前文件夹tar -zxvf node-v16.15.0-linux-x64.tar.gz 4、移动解压后的node-v16.15.0到/urs/local/bin 目录下，并改名为nodemv node-v16.15.0-linux-x64 /usr/local/bin cd /usr/local/bin mv node-v16.15.0-linux-x64 node 5、更改环境变量vim /etc/profile 末尾添加： export NODE_HOME=/usr/local/bin/node export PATH=$PATH:$NODE_HOME/bin 6、更新环境变量source /etc/profile 7、检查node、npm是否安装配置成功node -v npm -v 8、使用npm安装cnpmnpm install -g cnpm --registry=https://registry.npm.taobao.org cnpm -v 9、使用cnpm安装hexocnpm install -g hexo-cli hexo -v 10、开始使用hexo框架，初始化博客目录cd ~ mkdir blog cd blog hexo init 11、需要防火墙打开4000端口firewall-cmd --zone=public --add-port=4000/tcp --permanent firewall-cmd --reload 12、启动hexo服务，恭喜你成功搭建成功hexo s 参考链接 hexo 官方文档","categories":[],"tags":[]},{"title":"我的第一篇博客文章","slug":"我的第一篇博客文章","date":"2023-08-01T12:46:10.000Z","updated":"2023-08-03T10:26:27.274Z","comments":true,"path":"2023/08/01/我的第一篇博客文章/","link":"","permalink":"http://example.com/2023/08/01/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","excerpt":"","text":"第一章内容修改 第二章内容 参考文献www.codesheep.com","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2023-08-01T12:38:57.802Z","updated":"2023-08-01T12:38:57.803Z","comments":true,"path":"2023/08/01/hello-world/","link":"","permalink":"http://example.com/2023/08/01/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}